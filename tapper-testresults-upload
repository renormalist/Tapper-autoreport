#! /bin/bash

# ====================================================================
#
# tapper-testresults-upload
# -------------------------
#
# This is an utility to upload files generated by bash-test-utils
# via CREATE_RESULTS_FILE=1 to a Tapper server.
#
# It reports the contained "tests.tap" file as test report and
# attaches all files from "files.tgz" to that report.
#
# It is licensed under a 2-clause BSD license. See the LICENSE file.
#
# ====================================================================

unpack_result_file () {
    RESULTFILE="$1"

    if [ ! -e "$RESULTFILE" ] ; then
        return
    fi

    _MYTMP=$(mktemp -d)
    echo $_MYTMP # result
}

get_netcat () {
    _NETCAT=$(which netcat 2> /dev/null || which nc 2> /dev/null)
    # does it provide -q option
    if $_NETCAT -h 2>&1 |grep -q -- '-q.*quit' ; then
        _NETCAT="$_NETCAT -q7"
    else
        _NETCAT="$_NETCAT -w7"
    fi
    echo "$_NETCAT"
}

upload_prepare () {
    RESULTFILE="$1"

    # Tapper environment
    TAPPER_REPORT_SERVER=${TAPPER_REPORT_SERVER:-tapper}
    TAPPER_REPORT_PORT=${TAPPER_REPORT_PORT:-7357}
    TAPPER_API_PORT=${TAPPER_API_PORT:-7358}

    # filenames inside RESULTFILE
    _TAPFILE=${_TAPFILE:-tests.tap}
    _UPLOADSFILE=${_UPLOADSFILE:-files.tgz}

    NETCAT=$(get_netcat)

    if [ -n "$TAPPER_REPORT_SERVER" ] ; then
        MYNETCAT="$NETCAT $TAPPER_REPORT_SERVER $TAPPER_REPORT_PORT"
        # echo    "# Reporting:  $MYNETCAT ..." 1>&2

        TODO "Extract tests.tap, report it"
        RESULTDIR=$(unpack_result_file "$RESULTFILE")

        output=$( (cat $RESULTDIR/tests.tap | $MYNETCAT ) | tail -1 )

        reportid=$(echo $output | sed -e 's/^.*::Reports::Receiver. Protocol is TAP. Your report id: //')
        echo -n "# http://$TAPPER_REPORT_SERVER" 1>&2
        if [ -n "$TAPPER_WEB_PORT" ] ; then
            echo -n ":$TAPPER_WEB_PORT"
        elif echo $TAPPER_REPORT_SERVER | grep -q "localhost" ; then
            # heuristically localhost is running a development server
            echo -n ":3000"
        else
            # be explicit
            echo -n ":80"
        fi
        echo "/tapper/reports/id/$reportid" 1>&2
        upload_files "$RESULTDIR"
    fi
}

upload_files () {
    RESULTDIR="$1"

    MYNETCAT="$NETCAT $TAPPER_REPORT_SERVER $TAPPER_API_PORT"
    # echo "# Uploading:  $MYNETCAT ..." 1>&2

    for file in $(find $RESULTDIR -type f) ; do
        filetype=""
        if echo $file | grep -Eq '(gz|bz2)$' ; then
            filetype="application/octet-stream"
        fi
        echo -n "# - upload $file" 1>&2
        if [ "$filetype" ] ; then
            echo -n " ($filetype)" 1>&2
        fi
        echo " ..." 1>&2
        (
            echo "#! upload $reportid $file $filetype"
            cat $file
        ) | $MYNETCAT
    done
}
